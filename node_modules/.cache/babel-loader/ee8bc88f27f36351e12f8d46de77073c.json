{"ast":null,"code":"'use strict';\n\nvar Module = require('module');\n\nvar path = require('path');\n\nmodule.exports = function requireFromString(code, filename, opts) {\n  if (typeof filename === 'object') {\n    opts = filename;\n    filename = undefined;\n  }\n\n  opts = opts || {};\n  filename = filename || '';\n  opts.appendPaths = opts.appendPaths || [];\n  opts.prependPaths = opts.prependPaths || [];\n\n  if (typeof code !== 'string') {\n    throw new Error('code must be a string, not ' + typeof code);\n  }\n\n  var paths = Module._nodeModulePaths(path.dirname(filename));\n\n  var parent = module.parent;\n  var m = new Module(filename, parent);\n  m.filename = filename;\n  m.paths = [].concat(opts.prependPaths).concat(paths).concat(opts.appendPaths);\n\n  m._compile(code, filename);\n\n  var exports = m.exports;\n  parent && parent.children && parent.children.splice(parent.children.indexOf(m), 1);\n  return exports;\n};","map":{"version":3,"sources":["/home/codaruuu/Desktop/reactClient/remixclient/node_modules/require-from-string/index.js"],"names":["Module","require","path","module","exports","requireFromString","code","filename","opts","undefined","appendPaths","prependPaths","Error","paths","_nodeModulePaths","dirname","parent","m","concat","_compile","children","splice","indexOf"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAAlB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,SAASC,iBAAT,CAA2BC,IAA3B,EAAiCC,QAAjC,EAA2CC,IAA3C,EAAiD;AACjE,MAAI,OAAOD,QAAP,KAAoB,QAAxB,EAAkC;AACjCC,IAAAA,IAAI,GAAGD,QAAP;AACAA,IAAAA,QAAQ,GAAGE,SAAX;AACA;;AAEDD,EAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;AACAD,EAAAA,QAAQ,GAAGA,QAAQ,IAAI,EAAvB;AAEAC,EAAAA,IAAI,CAACE,WAAL,GAAmBF,IAAI,CAACE,WAAL,IAAoB,EAAvC;AACAF,EAAAA,IAAI,CAACG,YAAL,GAAoBH,IAAI,CAACG,YAAL,IAAqB,EAAzC;;AAEA,MAAI,OAAOL,IAAP,KAAgB,QAApB,EAA8B;AAC7B,UAAM,IAAIM,KAAJ,CAAU,gCAAgC,OAAON,IAAjD,CAAN;AACA;;AAED,MAAIO,KAAK,GAAGb,MAAM,CAACc,gBAAP,CAAwBZ,IAAI,CAACa,OAAL,CAAaR,QAAb,CAAxB,CAAZ;;AAEA,MAAIS,MAAM,GAAGb,MAAM,CAACa,MAApB;AACA,MAAIC,CAAC,GAAG,IAAIjB,MAAJ,CAAWO,QAAX,EAAqBS,MAArB,CAAR;AACAC,EAAAA,CAAC,CAACV,QAAF,GAAaA,QAAb;AACAU,EAAAA,CAAC,CAACJ,KAAF,GAAU,GAAGK,MAAH,CAAUV,IAAI,CAACG,YAAf,EAA6BO,MAA7B,CAAoCL,KAApC,EAA2CK,MAA3C,CAAkDV,IAAI,CAACE,WAAvD,CAAV;;AACAO,EAAAA,CAAC,CAACE,QAAF,CAAWb,IAAX,EAAiBC,QAAjB;;AAEA,MAAIH,OAAO,GAAGa,CAAC,CAACb,OAAhB;AACAY,EAAAA,MAAM,IAAIA,MAAM,CAACI,QAAjB,IAA6BJ,MAAM,CAACI,QAAP,CAAgBC,MAAhB,CAAuBL,MAAM,CAACI,QAAP,CAAgBE,OAAhB,CAAwBL,CAAxB,CAAvB,EAAmD,CAAnD,CAA7B;AAEA,SAAOb,OAAP;AACA,CA5BD","sourcesContent":["'use strict';\n\nvar Module = require('module');\nvar path = require('path');\n\nmodule.exports = function requireFromString(code, filename, opts) {\n\tif (typeof filename === 'object') {\n\t\topts = filename;\n\t\tfilename = undefined;\n\t}\n\n\topts = opts || {};\n\tfilename = filename || '';\n\n\topts.appendPaths = opts.appendPaths || [];\n\topts.prependPaths = opts.prependPaths || [];\n\n\tif (typeof code !== 'string') {\n\t\tthrow new Error('code must be a string, not ' + typeof code);\n\t}\n\n\tvar paths = Module._nodeModulePaths(path.dirname(filename));\n\n\tvar parent = module.parent;\n\tvar m = new Module(filename, parent);\n\tm.filename = filename;\n\tm.paths = [].concat(opts.prependPaths).concat(paths).concat(opts.appendPaths);\n\tm._compile(code, filename);\n\n\tvar exports = m.exports;\n\tparent && parent.children && parent.children.splice(parent.children.indexOf(m), 1);\n\n\treturn exports;\n};\n"]},"metadata":{},"sourceType":"script"}